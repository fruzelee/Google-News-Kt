<?xml version="1.0" encoding="utf-8"?>

<layout xmlns:android="http://schemas.android.com/apk/res/android">

    <RelativeLayout xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".view.NewsDetailsActivity">

        <ProgressBar
            android:id="@+id/progressbar"
            style="?android:attr/progressBarStyleHorizontal"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentTop="true"
            android:layout_marginTop="-7dp"
            android:backgroundTint="#ffffff"
            android:indeterminate="true"
            android:indeterminateTint="#D81B60"
            android:max="100" />

        <!-- View that will be hidden when video goes fullscreen -->
        <RelativeLayout
            android:id="@+id/nonVideoLayout"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <com.crevado.fr.googlenews.util.VideoEnabledWebView
                android:id="@+id/web_detail"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@android:color/white" />

        </RelativeLayout>

        <!-- View where the video will be shown when video goes fullscreen -->
        <RelativeLayout
            android:id="@+id/videoLayout"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <!-- View that will be shown while the fullscreen video loads. For example you could include
            a "Loading..." message. However, in this particular example this view is actually defined in
            view_loading_video.xml and inflated programmatically in ExampleActivity.java. The reason for
            this is to keep the main layout (this file) cleaner. -->
            <!-- <View
                android:id="@+id/videoLoading"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_centerInParent="true"
                android:visibility="invisible" /> -->

        </RelativeLayout>

    </RelativeLayout>

</layout>